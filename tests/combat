#!/usr/bin/perl
#
# dicerolls
#
# ---   *   ---   *   ---

# deps

  use v5.36.0;
  use strict;
  use warnings;

  use Time::HiRes qw(usleep);
  use English qw(-no_match_vars);

  use lib $ENV{'ARPATH'}.'/lib/sys/';
  use Style;

  use lib $ENV{'ARPATH'}.'/lib/';

  use GF::Icon;
  use GF::Mode::ANSI;

  use lib $ENV{'ARPATH'}.'/THRONE/';

  use RPG::Dice;

  use RPG::Cell;
  use RPG::Actor;
  use RPG::Spell;

  use RPG::Magic (

    $ENV{'ARPATH'} . '/THRONE/ROM/Runes/Basic'

  );

# ---   *   ---   *   ---
# ^fill out the grimoire

RPG::Spell->new(

  name   => 'Slash',
  school => 'Combat',

  degree => 0,
  eff    => ['Basic attack'],

  desc   => 'Cuts your target!',

);

RPG::Spell->new(

  name   => 'Snake Venom',
  school => 'Night',

  degree => 3,
  dur    => 3,

  eff    => [
    'Basic evil',
    'Basic poison',
    'Basic attack'

  ],

  desc   => 'Damages the enemy over time',

  anim   => [chr(0x186)],
  color  => 0b00110001,

);

RPG::Spell->new(

  name   => 'Smite',
  schhol => 'Faith',

  degree => 2,
  eff    => [
    'Basic bless',
    'Basic bless',
    'Basic attack'

  ],

  desc   => 'Doubly righteous attack',

  anim   => [chr(0x1D7)],
  color  => 0xFE,

);

RPG::Spell->new(

  name   => 'Holy Slash',
  school => 'Faith',

  degree => 1,
  eff    => [
    'Basic bless',
    'Basic attack'

  ],

  desc   => 'Cuts your target -- righteously!',

);

RPG::Spell->new(

  name   => 'Unholy Slash',
  school => 'Evil',

  degree => 2,
  eff    => [
    'Basic bless',
    'Basic evil',
    'Basic attack'

  ],

  desc   => 'Cuts your target -- maliciously!',

  anim   => [chr(0x1D8)],
  color  => 0b01100011,

);

# ---   *   ---   *   ---
# make map

my $arena=RPG::Cell->new(

  'imp_arena_00',

  name => 'The Imperium Arena',
  co   => [0,0],

);

# ---   *   ---   *   ---
# make dudes

my $jack=RPG::Actor->new(

  name  => 'Jack',

  cell  => $arena,
  pos   => [0,0],

  grim  => ['Slash','Holy Slash','Smite'],
  attrs => {armor=>{base=>0},grit=>{base=>0}},

);

my $jane=RPG::Actor->new(

  name  => 'Jane',

  cell  => $arena,
  pos   => [2,3],

  grim  => ['Slash','Unholy Slash','Snake Venom'],
  attrs => {armor=>{base=>0},grit=>{base=>0}},

);

# ---   *   ---   *   ---
# switchable viewpoints

my @actors = ($jack,$jane);

my %inia   = map {
  $ARG=>RPG::Dice->roll('1d20')

} 'jack','jane';

my $self  = ($inia{jack} > $inia{jane})
  ? $jack
  : $jane
  ;

my $other = ($self eq $jane)
  ? $jack
  : $jane
  ;

# ---   *   ---   *   ---
# drawing bars

my $f=GF::Mode::ANSI->new_frame();
print $f->encur(0);

sub draw_bars(@actors) {

  while(1) {

    my $co     = [0,3];
    my $redraw = 0;

    map {

      my ($updated,@cmd)=
        $ARG->draw_bars(pos=>$co);

      $redraw|=$updated;
      $f->req(@cmd);

    } @actors;

    $f->draw();
    usleep(10000);


    last if ! $redraw;

  };

};

# ---   *   ---   *   ---
# simulate battle

while(

   $self->alive()
&& $other->alive()

) {

  print "\e[0H\e[0J";

  my $spell=$self->take_turn() or last;
  draw_bars($jane,$jack);


  $self->cast($spell->{name},$other);

  print

    "\e[0H\e[0K"

  . "$self->{name} uses "
  . "$spell->{name} "

  . "on $other->{name}!"

  ;

  draw_bars($jane,$jack);

  usleep(20000);
  ($self,$other)=($other,$self);

};

# ---   *   ---   *   ---
# ^aftermath

$self->take_turn();
$other->take_turn();

draw_bars($jane,$jack);
say "\e[20H\e[0K";

my @victor=grep {$ARG->alive()} ($jane,$jack);
my @defeat=grep {! $ARG->alive()} ($jane,$jack);

map {
  say "$ARG->{name} died an inglorious death!"

} @defeat;

map {
  say "$ARG->{name} is victorious!"

} @victor;

say "Everyone is dead! ASFAIMAS rejoices!"
if ! @victor;

print $f->encur(1);

# ---   *   ---   *   ---
1; # ret
